"use strict";(self.webpackChunk_webdevstudios_docs=self.webpackChunk_webdevstudios_docs||[]).push([[635],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return u}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,f=d["".concat(c,".").concat(u)]||d[u]||m[u]||s;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1504:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),a=["components"],i={title:"Comments"},c=void 0,p={unversionedId:"backend/comments",id:"backend/comments",title:"Comments",description:"This explains the process of submitting comments to WordPress through the GraphQL API.",source:"@site/docs/backend/comments.md",sourceDirName:"backend",slug:"/backend/comments",permalink:"/nextjs-wordpress-starter/docs/backend/comments",editUrl:"https://github.com/WebDevStudios/nextjs-wordpress-starter/blob/main/docs/backend/comments.md",tags:[],version:"current",lastUpdatedBy:"Jeffrey de Wit",lastUpdatedAt:1656077519,formattedLastUpdatedAt:"6/24/2022",frontMatter:{title:"Comments"},sidebar:"tutorialSidebar",previous:{title:"Algolia",permalink:"/nextjs-wordpress-starter/docs/backend/algolia"},next:{title:"Gravity Forms",permalink:"/nextjs-wordpress-starter/docs/backend/gravity-forms"}},l={},m=[{value:"Backend Setup",id:"backend-setup",level:2},{value:"Frontend Setup",id:"frontend-setup",level:2},{value:"Posting process",id:"posting-process",level:2}],d={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This explains the process of submitting comments to WordPress through the GraphQL API."),(0,s.kt)("h2",{id:"backend-setup"},"Backend Setup"),(0,s.kt)("p",null,"Comments posted from the frontend are treated as non-authenticated comments. That is,\nthe rules for moderation are the same as if this were a normal WordPress install."),(0,s.kt)("p",null,"Take note of your settings under Settings > Discussion as they will apply, especially\nsettings around comment moderation."),(0,s.kt)("h2",{id:"frontend-setup"},"Frontend Setup"),(0,s.kt)("p",null,"Comments are rendered using the ",(0,s.kt)("inlineCode",{parentName:"p"},"Comments")," component found in\n",(0,s.kt)("inlineCode",{parentName:"p"},"components/molecules/Comments"),". This component renders both the comments from the\npost as well as the form to post new comments."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"validationSchema")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"isRequired")," attributes on the comment form are written\nfor requiring name and email. If your comment settings do not require these, you\ncan modifiy these attributes accordingly."),(0,s.kt)("p",null,"The component is included in ",(0,s.kt)("inlineCode",{parentName:"p"},"pages/blog/[[...slug]].js")," to facilitate comments\non blog posts; if you have other post types with comments enabled, you can add\nthe component to their pages. Make sure to pass both the comment data from the\npage's GraphQL query as well as the ",(0,s.kt)("inlineCode",{parentName:"p"},"databaseId")," of the post."),(0,s.kt)("h2",{id:"posting-process"},"Posting process"),(0,s.kt)("p",null,"The comments are posted through the internal API endpoint at ",(0,s.kt)("inlineCode",{parentName:"p"},"api/wp/postComment.js"),"\nand passed along to the main WordPress site over GraphQL."),(0,s.kt)("p",null,"The internal API will do a basic check of the HTTP headers to ensure the comment\ncomes from the frontend (or it at least pretends to). Once posted to WordPress,\nthe comment is subjected to all normal comment rules, including moderation and\nAkismet spam protection."))}u.isMDXComponent=!0}}]);